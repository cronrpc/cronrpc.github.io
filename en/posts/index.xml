<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on cronrpc</title>
    <link>https://cronrpc.github.io/en/posts/</link>
    <description>Recent content in Posts on cronrpc</description>
    <image>
      <title>cronrpc</title>
      <url>https://cronrpc.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://cronrpc.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- 0.147.2</generator>
    <language>en</language>
    <lastBuildDate>Fri, 29 Aug 2025 23:01:51 +0800</lastBuildDate>
    <atom:link href="https://cronrpc.github.io/en/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Stencil Buffer and Stencil Test</title>
      <link>https://cronrpc.github.io/en/posts/stencil-buffer-and-stencil-test/</link>
      <pubDate>Fri, 29 Aug 2025 23:01:51 +0800</pubDate>
      <guid>https://cronrpc.github.io/en/posts/stencil-buffer-and-stencil-test/</guid>
      <description>&lt;h2 id=&#34;introduction-to-stencil&#34;&gt;Introduction to Stencil&lt;/h2&gt;
&lt;p&gt;The concept of Stencil is closely tied to the Stencil Buffer.&lt;/p&gt;
&lt;p&gt;We know that the screen has a depth buffer. By default, if the distance of the pixel being rendered is greater than the value in the depth buffer, the current pass is discarded.&lt;/p&gt;
&lt;p&gt;The Stencil Buffer is also a buffer, but unlike the depth buffer, which has built-in comparison behavior, the Stencil Buffer requires us to explicitly define how it should be processed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Worley Noise / Voronoi Noise Generator</title>
      <link>https://cronrpc.github.io/en/posts/worley-noise-generator/</link>
      <pubDate>Mon, 18 Aug 2025 20:50:23 +0800</pubDate>
      <guid>https://cronrpc.github.io/en/posts/worley-noise-generator/</guid>
      <description>&lt;h2 id=&#34;worley-noise&#34;&gt;Worley Noise&lt;/h2&gt;
&lt;p&gt;Worley Noise&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; (also known as Voronoi noise or Cellular noise) was introduced by Steven Worley&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt; in 1996 as a type of procedural noise function.&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;worley noise&#34; loading=&#34;lazy&#34; src=&#34;https://cronrpc.github.io/en/posts/worley-noise-generator/worley-noise.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;Its appearance resembles biological cells, which is why the author originally called it “Cellular Texture.”&lt;/p&gt;
&lt;p&gt;The algorithm for generating Worley Noise works as follows: the image is divided into a grid of cells, and each cell contains a single feature point. The value of any given pixel is the minimum distance from that pixel to the feature points in the surrounding cells.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Signed Distance Field</title>
      <link>https://cronrpc.github.io/en/posts/signed-distance-field/</link>
      <pubDate>Wed, 13 Aug 2025 20:25:38 +0800</pubDate>
      <guid>https://cronrpc.github.io/en/posts/signed-distance-field/</guid>
      <description>&lt;h2 id=&#34;introduction-to-sdf&#34;&gt;Introduction to SDF&lt;/h2&gt;
&lt;h3 id=&#34;signed-distance-field-sdf&#34;&gt;Signed Distance Field (SDF)&lt;/h3&gt;
&lt;p&gt;Signed Distance Field (SDF)&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; is a mathematical function or data structure used to represent shapes.
In 2D or 3D space, it assigns each point a signed distance value, which represents the distance to the nearest surface (or boundary), with the sign distinguishing between inside and outside:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Positive value: The point is outside the shape, and the value indicates the nearest distance to the surface.&lt;/li&gt;
&lt;li&gt;Negative value: The point is inside the shape, and the absolute value indicates the nearest distance to the surface.&lt;/li&gt;
&lt;li&gt;Zero: The point lies exactly on the surface of the shape.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Formally, for a point $x$ in space, an SDF can be defined as:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Perlin Noise Generator</title>
      <link>https://cronrpc.github.io/en/posts/perlin-noise-generator/</link>
      <pubDate>Wed, 06 Aug 2025 21:00:07 +0800</pubDate>
      <guid>https://cronrpc.github.io/en/posts/perlin-noise-generator/</guid>
      <description>&lt;h2 id=&#34;introduction-to-perlin-noise&#34;&gt;Introduction to Perlin Noise&lt;/h2&gt;
&lt;p&gt;Perlin Noise was developed by Ken Perlin in 1983 for the film &lt;em&gt;Tron&lt;/em&gt; as a smooth pseudo-random noise algorithm&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. It can generate random patterns with natural-looking texture and is widely used in computer graphics to simulate natural phenomena such as clouds, terrain, fire, wood grain, and water flow&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Unlike plain white noise, Perlin Noise has spatial correlation: values at neighboring sample points vary smoothly without abrupt jumps. This smoothness makes the generated textures resemble the continuous variations found in nature.&lt;/p&gt;</description>
    </item>
    <item>
      <title>2D Fourier Transform</title>
      <link>https://cronrpc.github.io/en/posts/2d-fourier-transform/</link>
      <pubDate>Fri, 01 Aug 2025 20:49:34 +0800</pubDate>
      <guid>https://cronrpc.github.io/en/posts/2d-fourier-transform/</guid>
      <description>&lt;p&gt;This article focuses solely on the following topics:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transition from trigonometric series expansion to the Euler form of the Fourier transform&lt;/li&gt;
&lt;li&gt;What the Discrete Fourier Transform is&lt;/li&gt;
&lt;li&gt;What the 2D Fourier Transform is&lt;/li&gt;
&lt;li&gt;Explanation of the 2D Discrete Fourier Transform from the 2D Fourier Transform&lt;/li&gt;
&lt;li&gt;How to perform a 2D Fourier transform on an image&lt;/li&gt;
&lt;li&gt;Periodicity issues in the 2D Fourier transform&lt;/li&gt;
&lt;li&gt;Understanding the centering of the 2D frequency spectrum from the periodicity of the 2D Fourier transform&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;fourier-series&#34;&gt;Fourier Series&lt;/h2&gt;
&lt;p&gt;A Fourier series is a mathematical tool that represents a periodic function as an infinite sum of sines and cosines.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
